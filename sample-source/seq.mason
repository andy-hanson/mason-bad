use .js-help for do
use .methods for method implement
use .Option for Some None
use .types for Any Bool Fun Nat of


Seq.
	subsumes?. |a
		True


iterator. method
	name. "iterator"

implement iterator Array
	`function*(arr) { for (var i = 0; i < arr.length; ++i) yield arr[i]; }`



\ TODO: iterator
each. method
	name. "each"
	check. |body seq use-element:Fun[of Any Int Void]
		do body

fold. method
	doc
		blah

	name. "fold"
	check. |body seq initial folder:Fun[of Any Any Any]
		in
			blah
		out
			blah

		do body


	default. |seq initial folder
		accumulator = initial
		each seq |element
			accumulator := folder accumulator element
		accumulator

\\\
REQUIRES ITERATOR

fold+.method
	name. "fold+"
	wrap. |seq folder:Fun[of Any Any Any]
	default. |seq folder
		accumulator =
\\\

map. method
	name. "map"
	wrap. |:Seq seq mapper:Fun[of Any Any]
		()

find-opt. method
	name. "find"
	wrap. |seq predicate:Fun[of Any Bool]
		()

size. method
	name. "size"
	wrap. |:Nat seq
		()


implement each Option map
implement map Option |opt mapper
	()

implement each Array Array.prototype.forEach
implement each String Array.prototype.forEach



implement find-index-opt Array |array predicate
	`for (var i = 0; i < array.length; ++i) if (predicate(array[i])) return Option.Some(i);`

implement find Array |array predicate:Fun[of Any Bool]
	map find-index-opt array |index
		array[_.index]

