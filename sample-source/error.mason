use .alias for Fun Act
use .Option
use .Bool for True False

annotate-errors. |try:Act make-annotation:Fun[Error]
	try-catch try |error
		annotation = make-annotation error
		error.message := "{annotation}: {error.message}"
		throw! error

catch-opt. |try:Act
	try-catch |
		try ()
		None
	| error
		Some error

catch |try:Fun
	Option.force (catch-opt try) "Expected to throw an error."

throw!. |error
	case error
		:Error
			`throw error`
		exists? error
			`throw new Error(error)`
		else
			`throw new Error("Failed!")`

try. |try:Act
	try-catch
		Some
			value. do try
	|
		None

try-catch. |try:Act catch:Fun[Error]
	try-catch-finally try catch |
		()

try-catch-finally. |try:Act catch:Fun[Error -> Any] finally:Act
	`var x;`
	`try { x = _try(); }`
	`catch (error) { x = _catch(error); }`
	`finally { _finally(); }`
	x
